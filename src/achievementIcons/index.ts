import { Common } from '../common';
import { ResourceContext } from '../utils/ResourceContext';
import { AchievementIcon } from './AchievementIcon.class';

const ENDPT = 'achievementicons';

/**
 * Achievement icons resource
 */
export class AchievementIconsResource {
    private common: Common<AchievementIcon>;
    private context: ResourceContext;

    /**
     * Construct the achievement icons resource
     * @param context The context to make requests as
     */
    constructor(context: ResourceContext) {
        this.context = context;
        this.common = new Common(context, ENDPT);
    }


    /**
     * Get a list of all preloaded achievement icons
     * @param {object} userOpts option overrides for this request
     * @returns {Promise<object[]>} A promise that resolves to an array of achievement icon identifiers
     */
    public getAllPreloaded(userOpts?): Promise<AchievementIcon[]> {
        return this.context.http.makeRequest({
            method: 'GET',
            url: `/v2/apps/${this.context.applicationId}/${ENDPT}/preloaded`
        }, userOpts);
    }

    /**
     * Get a list of all uploaded achievement icons
     * @param userOpts option overrides for this request
     * @returns A promise that resolves to an array of achievement icon identifiers
     */
    public getAll(userOpts?): Promise<AchievementIcon[]> {
        return this.context.http.makeRequest({
            method: 'GET',
            url: `/v2/apps/${this.context.applicationId}/${ENDPT}`
        }, userOpts);
    }

    /**
     * Delete previously uploaded achievement icon by filename.
     * @param iconFileName icon file name (generated by BadgeUp when the icon was uploaded, not the original file name)
     * @param userOpts option overrides for this request
     * @returns A promise that resolves to the deleted achievement icon
     */
    public remove(iconFileName: string, userOpts?): Promise<AchievementIcon> {
        return this.common.remove(iconFileName, userOpts);
    }
}
